//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0-SNAPSHOT 
// See <a href="https://jaxb.java.net/">https://jaxb.java.net/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.19 at 10:49:53 AM HKT 
//


package net.opengis.samplingspatial;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import net.opengis.om.OMProcessPropertyType;
import net.opengis.sampling.SFSamplingFeatureType;
import org.isotc211.gmd.DQPositionalAccuracyPropertyType;


/**
 *  When observations are made to estimate properties of a geospatial
 * 				feature, in particular where the value of a property varies within the scope of the
 * 				feature, a spatial sampling feature is used. Depending on accessibility and on the
 * 				nature of the expected property variation, the sampling feature may be extensive in
 * 				one, two or three spatial dimensions. Processing and visualization methods are often
 * 				dependent on the topological dimension of the sampling manifold, so this provides a
 * 				natural classification system for sampling features. This classification follows
 * 				common practice in focussing on conventional spatial dimensions. Properties observed
 * 				on sampling features may be time-dependent, but the temporal axis does not generally
 * 				contribute to the classification of sampling feature classes. Sampling feature
 * 				identity is usually less time-dependent than is the property value. 
 * 
 * <p>Java class for SF_SpatialSamplingFeatureType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SF_SpatialSamplingFeatureType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opengis.net/sampling/2.0}SF_SamplingFeatureType"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.opengis.net/samplingSpatial/2.0}SF_SpatialCommonProperties"/&gt;
 *         &lt;element ref="{http://www.opengis.net/samplingSpatial/2.0}shape"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SF_SpatialSamplingFeatureType", propOrder = {
    "hostedProcedure",
    "positionalAccuracy",
    "shape"
})
public class SFSpatialSamplingFeatureType
    extends SFSamplingFeatureType
{

    protected List<OMProcessPropertyType> hostedProcedure;
    protected List<DQPositionalAccuracyPropertyType> positionalAccuracy;
    @XmlElement(required = true)
    protected ShapeType shape;

    /**
     * Gets the value of the hostedProcedure property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hostedProcedure property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHostedProcedure().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OMProcessPropertyType }
     * 
     * 
     */
    public List<OMProcessPropertyType> getHostedProcedure() {
        if (hostedProcedure == null) {
            hostedProcedure = new ArrayList<OMProcessPropertyType>();
        }
        return this.hostedProcedure;
    }

    /**
     * Gets the value of the positionalAccuracy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the positionalAccuracy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPositionalAccuracy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DQPositionalAccuracyPropertyType }
     * 
     * 
     */
    public List<DQPositionalAccuracyPropertyType> getPositionalAccuracy() {
        if (positionalAccuracy == null) {
            positionalAccuracy = new ArrayList<DQPositionalAccuracyPropertyType>();
        }
        return this.positionalAccuracy;
    }

    /**
     *  The association Geometry shall link a
     * 								SF_SpatialSamplingFeature to a GM_Object that describes its shape.
     * 							
     * 
     * @return
     *     possible object is
     *     {@link ShapeType }
     *     
     */
    public ShapeType getShape() {
        return shape;
    }

    /**
     * Sets the value of the shape property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShapeType }
     *     
     */
    public void setShape(ShapeType value) {
        this.shape = value;
    }

}
